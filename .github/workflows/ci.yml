name: C++ CI

on:
  push:
    branches: [ master, main ]  # Support both master and main branches
  pull_request:
    branches: [ master, main ]
  workflow_dispatch:  # Enable manual triggers
    inputs:
      build_type:
        description: 'Build type (Release/Debug)'
        required: true
        default: 'Release'
        type: choice
        options:
        - Release
        - Debug

jobs:
  ubuntu:
    name: Ubuntu ${{ matrix.compiler.name }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        compiler:
          - { name: "GCC", cc: "gcc-11", cxx: "g++-11" }
          - { name: "Clang", cc: "clang", cxx: "clang++" }

    steps:
    - uses: actions/checkout@v3

    - name: Configure CMake
      run: cmake -B build -DCMAKE_BUILD_TYPE=${{ github.event.inputs.build_type || 'Release' }}
      env:
        CC: ${{ matrix.compiler.cc }}
        CXX: ${{ matrix.compiler.cxx }}

    - name: Build
      run: cmake --build build --config ${{ github.event.inputs.build_type || 'Release' }} -j$(nproc)

    - name: Test
      working-directory: build
      run: ctest -C ${{ github.event.inputs.build_type || 'Release' }} --output-on-failure

    - name: Run benchmarks
      working-directory: build
      run: ./holohash_bench

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ubuntu-${{ matrix.compiler.name }}-build
        path: build/holohash_*
        if-no-files-found: warn

  macos:
    name: macOS Latest
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v3

    - name: Configure CMake
      run: cmake -B build -DCMAKE_BUILD_TYPE=${{ github.event.inputs.build_type || 'Release' }}

    - name: Build
      run: cmake --build build --config ${{ github.event.inputs.build_type || 'Release' }} -j$(sysctl -n hw.ncpu)

    - name: Test
      working-directory: build
      run: ctest -C ${{ github.event.inputs.build_type || 'Release' }} --output-on-failure

    - name: Run benchmarks
      working-directory: build
      run: ./holohash_bench

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: macos-build
        path: build/holohash_*
        if-no-files-found: warn

  windows:
    name: Windows MSVC
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3

    - name: Configure CMake
      run: cmake -B build -DCMAKE_BUILD_TYPE=${{ github.event.inputs.build_type || 'Release' }}

    - name: Build
      run: cmake --build build --config ${{ github.event.inputs.build_type || 'Release' }} --parallel

    - name: Test
      working-directory: build
      run: ctest -C ${{ github.event.inputs.build_type || 'Release' }} --output-on-failure

    - name: Run benchmarks
      working-directory: build
      run: Release\holohash_bench.exe

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: windows-build
        path: build/Release/holohash_*
        if-no-files-found: warn
